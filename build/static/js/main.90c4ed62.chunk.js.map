{"version":3,"sources":["assets/O.svg","assets/U.svg","assets/V.svg","assets/Z.svg","components/buttons/index.js","components/inputs/index.js","views/home/HomeView.js","views/home/index.js","store/constants/index.js","store/actions/index.js","store/actions/user/index.js","store/containers/home/index.js","components/cards/index.js","views/board/BoardView.js","utils/index.js","constants/index.js","views/feedback/index.js","views/board/index.js","store/containers/board/index.js","views/error/index.js","App.js","store/reducers/user/index.js","store/reducers/index.js","index.js","store/index.js"],"names":["module","exports","PrimaryButton","onClick","text","IconButton","icon","disabled","className","color","size","PrimaryInput","onChange","placeholder","value","HomeView","name","onClickContinue","onChangeName","Icon","Home","actionSetUser","history","useHistory","push","e","target","USER","emmit","user","action","type","types","payload","connect","state","userStore","dispatch","EmptyCard","accept","item","onDrop","useDrop","drop","collect","monitor","isOver","canDrop","ref","src","FilledCard","image","id","onMouseDown","useDrag","opacity","isDragging","dragRef","style","UsedCard","PlacedCard","onDrag","isDroppable","endDrop","end","res","didDrop","dropRef","BoardView","paintFilled","paintEmpty","onDragRearrange","dragging","onDropRearrange","endRearrange","onStartCount","count","restart","DndProvider","backend","HTML5Backend","map","card","isEmpty","key","img","index","getIndexOfItemInArray","array","indexOf","getDragIndexOfArray","filter","item_","getItemInArray","checkCorrectPositionById","pattern","split","CORRECT_PATTERN","ZOOVU_Z","ZOOVU_O","ZOOVU_V","ZOOVU_U","EMPTY_PATTER","Feedback","score","time","Board","useState","setPainFilled","setPaintEmpty","setCount","timer","setTimer","countdown","setCountdown","setRestart","useEffect","restartGame","clearInterval","temporaryValue","randomIndex","copyArray","currentIndex","length","Math","floor","random","shuffle","setDragging","startInterval","setInterval","handleHorizontalDrop","emptyArr","dragIndex","dropped","dragged","splice","checkPatternById","curentPattern","correctPattern","checkCorrectPatternById","checkCorrectMove","filledArr","dropIndex","handleVerticalDrop","Error","App","path","exact","initialState","userReducer","rootReducer","combineReducers","store","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","createStore","configureStore","App_","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90c4ed62.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/O.987e802d.svg\";","module.exports = __webpack_public_path__ + \"static/media/U.509452d2.svg\";","module.exports = __webpack_public_path__ + \"static/media/V.f04e5e7e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Z.98d275b2.svg\";","import React from 'react';\nimport './buttons.scss';\n\nconst PrimaryButton = ({ onClick, text, icon: IconButton, disabled }) => {\n  return (\n    <button onClick={onClick} className=\"primary-button\" disabled={disabled}>\n      <div className=\"primary-button-text\">{text}</div>\n      <IconButton color={disabled ? '#C0C0C0' : 'rgb(75,0,130)'} size={15} />\n    </button>\n  );\n};\n\nexport { PrimaryButton };\n","import React from 'react';\nimport './inputs.scss';\n\nconst PrimaryInput = ({ onChange, placeholder, value }) => {\n  return (\n    <input className=\"primary-input\" onChange={onChange} placeholder={placeholder} value={value} />\n  );\n};\n\nexport { PrimaryInput };\n","import React from 'react';\nimport { PrimaryButton } from '../../components/buttons';\nimport { PrimaryInput } from '../../components/inputs';\nimport * as Icon from 'react-feather';\nimport './home.scss';\n\nconst HomeView = ({ name, onClickContinue, onChangeName }) => {\n  return (\n    <div className=\"home-main-container\">\n      <h3 className=\"home-title\">Hello friend, tell me your name...</h3>\n      <PrimaryInput placeholder=\"Your name here\" value={name} onChange={onChangeName} />\n      <PrimaryButton\n        text=\"Let's go\"\n        icon={Icon.ArrowRight}\n        onClick={onClickContinue}\n        disabled={name === ''}\n      />\n    </div>\n  );\n};\n\nexport default HomeView;\n","import React from 'react';\nimport HomeView from './HomeView.js';\nimport { useHistory } from 'react-router-dom';\n\nconst Home = ({ actionSetUser, name }) => {\n  const history = useHistory();\n\n  const onClickContinue = () => {\n    history.push('/board');\n  };\n\n  const onChangeName = (e) => {\n    actionSetUser(e.target.value);\n  };\n\n  return <HomeView name={name} onClickContinue={onClickContinue} onChangeName={onChangeName} />;\n};\n\nexport default Home;\n","export const USER = {\n  ACTION_SET_USER: 'ACTION_SET_USER',\n};\n","import user from './user';\n\nconst emmit = {\n  user,\n};\n\nexport default emmit;\n","import * as types from '../../constants';\n\nconst actionSetUser = (user) => ({\n  type: types.USER.ACTION_SET_USER,\n  payload: user,\n});\n\nconst action = {\n  actionSetUser,\n};\n\nexport const user = {\n  action,\n};\n\nexport default user;\n","import { connect } from 'react-redux';\nimport Home from '../../../views/home';\nimport emmit from '../../actions';\n\nconst mapStateToProps = (state) => ({\n  name: state.userStore.name,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actionSetUser: (user) => dispatch(emmit.user.action.actionSetUser(user)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from 'react';\nimport './cards.scss';\nimport { useDrag, useDrop } from 'react-dnd';\n\nconst EmptyCard = ({ accept = ['card', 'placed-card'], item, onDrop }) => {\n  const [, drop] = useDrop({\n    accept,\n    drop: onDrop,\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n    }),\n  });\n  return (\n    <div ref={drop} className=\"card-empty\">\n      <img src={item} />\n    </div>\n  );\n};\n\nconst FilledCard = ({ image, id, onMouseDown }) => {\n  const [{ opacity }, dragRef] = useDrag({\n    item: { type: 'card', id },\n    collect: (monitor) => ({\n      opacity: monitor.isDragging() ? 0.5 : 1,\n    }),\n  });\n\n  return (\n    <div ref={dragRef} style={{ opacity }} className=\"card-filled\" onMouseDown={onMouseDown}>\n      <img src={image} />\n    </div>\n  );\n};\n\nconst UsedCard = () => {\n  return <div className=\"card-filled\" />;\n};\n\nconst PlacedCard = ({\n  image,\n  id,\n  onDrag,\n  isDroppable,\n  accept = ['placed-card'],\n  onDrop,\n  endDrop,\n}) => {\n  const [{ opacity }, dragRef] = useDrag({\n    item: { type: 'placed-card', id },\n    collect: (monitor) => ({\n      opacity: monitor.isDragging() ? 0.5 : 1,\n    }),\n    end: (res, monitor) => {\n      const didDrop = monitor.didDrop();\n      endDrop(didDrop, res);\n    },\n  });\n  const [, dropRef] = useDrop({\n    accept,\n    drop: onDrop,\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n    }),\n  });\n\n  const dragEvent = () => {\n    onDrag(id);\n  };\n  return (\n    <div\n      ref={isDroppable ? dropRef : dragRef}\n      style={{ opacity }}\n      className=\"card-filled\"\n      onDrag={dragEvent}\n    >\n      <img src={image} />\n    </div>\n  );\n};\n\nexport { EmptyCard, FilledCard, UsedCard, PlacedCard };\n","import React from 'react';\nimport './board.scss';\nimport { EmptyCard, FilledCard, UsedCard, PlacedCard } from '../../components/cards';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport * as Icon from 'react-feather';\n\nconst BoardView = ({\n  paintFilled,\n  paintEmpty,\n  onDrop,\n  onDragRearrange,\n  dragging,\n  onDropRearrange,\n  endRearrange,\n  onStartCount,\n  count,\n  name,\n  restart,\n}) => {\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className={`board-main-container${restart !== 10 ? '-opacity' : ''}`}>\n        <div className=\"board-spaced-between-content\">\n          <div className=\"title\">Good luck, {name}!</div>\n          <div className=\"score-container\">\n            <Icon.Clock color=\"#13EBA2\" />\n            <div className=\"score-text\">Your score: {count} seconds</div>\n          </div>\n        </div>\n\n        <div className=\"board-spaced-between-content\">\n          <div className=\"board-text\">Pick up the right cards</div>\n          <div className=\"board-text\">The faster the better</div>\n        </div>\n\n        <div className=\"board-cards-container\">\n          {paintFilled.map((card) =>\n            card.isEmpty ? (\n              <UsedCard key={card.id} />\n            ) : (\n              <FilledCard\n                key={card.id}\n                image={card.img}\n                id={card.id}\n                onMouseDown={count === 0 ? onStartCount : null}\n              />\n            )\n          )}\n        </div>\n\n        <div className=\"board-spaced-between-content\">\n          <div className=\"board-text\">...and drop them here to make the logo great again</div>\n        </div>\n\n        <div className=\"board-cards-container\">\n          {paintEmpty.map((card, index) =>\n            card.isEmpty ? (\n              <EmptyCard\n                key={index}\n                image={card.img}\n                onDrop={(item) => onDrop(item, index)}\n                item={card.img}\n              />\n            ) : (\n              <PlacedCard\n                key={card.id}\n                image={card.img}\n                id={card.id}\n                onDrag={onDragRearrange}\n                isDroppable={dragging ? dragging !== index : false}\n                onDrop={(item) => onDropRearrange(item, index)}\n                endDrop={endRearrange}\n              />\n            )\n          )}\n        </div>\n      </div>\n    </DndProvider>\n  );\n};\n\nexport default BoardView;\n","const getItemInArray = (array, item) => (value) =>\n  array.filter((item_) => item[value] === item_[value])[0];\n\nconst getIndexOfItemInArray = (array, item) => array.indexOf(item);\n\nconst getDragIndexOfArray = (array, item) => {\n  const card = getItemInArray(array, item)('id');\n  return getIndexOfItemInArray(array, card);\n};\n\nconst shuffle = (array) => {\n  const copyArray = [...array];\n  let currentIndex = copyArray.length;\n  let temporaryValue;\n  let randomIndex;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    temporaryValue = copyArray[currentIndex];\n    copyArray[currentIndex] = copyArray[randomIndex];\n    copyArray[randomIndex] = temporaryValue;\n  }\n\n  return copyArray;\n};\n\nconst checkCorrectPositionById = (item, index, pattern) => {\n  return pattern[index].id.split('_')[0] === item.id.split('_')[0];\n};\n\nconst checkCorrectPatternById = (curentPattern, correctPattern) => {\n  for (const item of curentPattern) {\n    const index = getIndexOfItemInArray(curentPattern, item);\n    if (item.id) {\n      if (!checkCorrectPositionById(item, index, correctPattern)) {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n  return true;\n};\n\nexport {\n  getItemInArray,\n  getDragIndexOfArray,\n  getIndexOfItemInArray,\n  shuffle,\n  checkCorrectPositionById,\n  checkCorrectPatternById,\n};\n","import ZOOVU_O from '../assets/O.svg';\nimport ZOOVU_U from '../assets/U.svg';\nimport ZOOVU_V from '../assets/V.svg';\nimport ZOOVU_Z from '../assets/Z.svg';\n\nconst CORRECT_PATTERN = [\n  { img: ZOOVU_Z, id: 'Z', isEmpty: false },\n  { img: ZOOVU_O, id: 'O_1', isEmpty: false },\n  { img: ZOOVU_O, id: 'O_2', isEmpty: false },\n  { img: ZOOVU_V, id: 'V', isEmpty: false },\n  { img: ZOOVU_U, id: 'U', isEmpty: false },\n];\n\nconst EMPTY_PATTER = [\n  { img: null, id: null, isEmpty: true },\n  { img: null, id: null, isEmpty: true },\n  { img: null, id: null, isEmpty: true },\n  { img: null, id: null, isEmpty: true },\n  { img: null, id: null, isEmpty: true },\n];\n\nexport { CORRECT_PATTERN, EMPTY_PATTER };\n","import React from 'react';\nimport './feedback.scss';\n\nconst Feedback = ({ name, score, time }) => {\n  return (\n    <div className=\"feedback-main-container\">\n      <div className=\"feedback-container\">\n        <div className=\"feedback-title\">\n          Congratulations, <span>{name}</span>!\n        </div>\n        <div className=\"feedback-subtitle\">You won with a score of: {score}</div>\n        <div className=\"feedback-text\">\n          The game will restart in <span>{time}</span> seconds\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Feedback;\n","import React, { useState, useEffect } from 'react';\nimport BoardView from './BoardView';\nimport {\n  getDragIndexOfArray,\n  shuffle,\n  checkCorrectPositionById,\n  checkCorrectPatternById,\n} from '../../utils';\nimport { CORRECT_PATTERN, EMPTY_PATTER } from '../../constants';\nimport Feedback from '../feedback';\nimport { useHistory } from 'react-router-dom';\n\nconst Board = ({ name }) => {\n  const [paintFilled, setPainFilled] = useState([]);\n  const [paintEmpty, setPaintEmpty] = useState([]);\n  const [count, setCount] = useState(0);\n  const [timer, setTimer] = useState(null);\n  const [countdown, setCountdown] = useState(null);\n  const [restart, setRestart] = useState(10);\n  const history = useHistory();\n\n  useEffect(() => {\n    restartGame();\n    if (!name) {\n      history.push('/');\n    }\n  }, []);\n\n  useEffect(() => {\n    if (restart === 0) {\n      setCountdown(clearInterval(countdown));\n      restartGame();\n    }\n  }, [restart]);\n\n  const restartGame = () => {\n    setPainFilled(shuffle(CORRECT_PATTERN));\n    setPaintEmpty(EMPTY_PATTER);\n    setCount(0);\n    setRestart(10);\n  };\n\n  const [dragging, setDragging] = useState(null);\n\n  const onStartCount = () => {\n    startInterval();\n  };\n\n  const startInterval = () => {\n    setTimer(\n      setInterval(() => {\n        setCount((time) => time + 1);\n      }, 1000)\n    );\n  };\n\n  const startCountDown = () => {\n    setCountdown(\n      setInterval(() => {\n        setRestart((time) => time - 1);\n      }, 1000)\n    );\n  };\n\n  const handleVerticalDrop = (emptyArr, filledArr, dropIndex, dragIndex) => {\n    emptyArr.splice(dropIndex, 1, filledArr[dragIndex]);\n    filledArr.splice(dragIndex, 1, { ...filledArr[dragIndex], isEmpty: true });\n    setPainFilled([...filledArr]);\n    setPaintEmpty([...emptyArr]);\n    checkPatternById(emptyArr);\n  };\n\n  const handleHorizontalDrop = (emptyArr, index, dragIndex) => {\n    const dropped = emptyArr[index];\n    const dragged = emptyArr[dragIndex];\n    emptyArr.splice(index, 1, { ...dragged });\n    emptyArr.splice(dragIndex, 1, { ...dropped });\n    setPaintEmpty([...emptyArr]);\n    checkPatternById(emptyArr);\n  };\n\n  const onDrop = (item, index) => {\n    const filledArr = [...paintFilled];\n    const emptyArr = [...paintEmpty];\n    let dragIndex;\n    if (item.type === 'card') {\n      dragIndex = getDragIndexOfArray(filledArr, item);\n      handleVerticalDrop(emptyArr, filledArr, index, dragIndex);\n    } else {\n      dragIndex = getDragIndexOfArray(emptyArr, item);\n      handleHorizontalDrop(emptyArr, index, dragIndex);\n    }\n    checkCorrectMove(item, index);\n  };\n\n  const onDragRearrange = (item) => {\n    const emptyArr = [...paintEmpty];\n    const dragIndex = getDragIndexOfArray(emptyArr, item);\n    setDragging(dragIndex);\n  };\n\n  const onDropRearrange = (item, index) => {\n    const emptyArr = [...paintEmpty];\n    const dragIndex = getDragIndexOfArray(emptyArr, item);\n    handleHorizontalDrop(emptyArr, index, dragIndex);\n    checkCorrectMove(item, index);\n  };\n\n  const endRearrange = () => setDragging(null);\n\n  const checkPatternById = (array) => {\n    if (checkCorrectPatternById(array, CORRECT_PATTERN)) {\n      setTimer(clearInterval(timer));\n      startCountDown();\n    }\n  };\n\n  const checkCorrectMove = (item, index) => {\n    if (!checkCorrectPositionById(item, index, CORRECT_PATTERN)) {\n      setCount((time) => time + 10);\n    }\n  };\n\n  return (\n    <>\n      <BoardView\n        onDrop={onDrop}\n        onDragRearrange={onDragRearrange}\n        onDropRearrange={onDropRearrange}\n        endRearrange={endRearrange}\n        dragging={dragging}\n        paintFilled={paintFilled}\n        paintEmpty={paintEmpty}\n        onStartCount={onStartCount}\n        count={count}\n        name={name}\n        restart={restart}\n      />\n      {restart !== 10 ? <Feedback time={restart} name={name} score={count} /> : null}\n    </>\n  );\n};\n\nexport default Board;\n","import { connect } from 'react-redux';\nimport Board from '../../../views/board';\n\nconst mapStateToProps = (state) => ({\n  name: state.userStore.name,\n});\n\nexport default connect(mapStateToProps, null)(Board);\n","import React from 'react';\nimport './error.scss';\n\nconst Error = () => {\n  return (\n    <div className=\"error-main-container\">\n      <div className=\"error-container\">\n        <div className=\"error-title\">Whoops,</div>\n        <div className=\"error-subtitle\">looks like the page you're looking for doesn't exist</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Error;\n","import React from 'react';\nimport Home from './store/containers/home';\nimport Board from './store/containers/board';\nimport Error from './views/error';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/board\">\n          <Board />\n        </Route>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"*\">\n          <Error />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import * as types from '../../constants';\n\nconst initialState = {\n  name: '',\n};\n\nconst userReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case types.USER.ACTION_SET_USER:\n      return { ...state, name: payload };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import userStore from './user';\nimport { combineReducers } from 'redux';\n\nconst rootReducer = () =>\n  combineReducers({\n    userStore,\n  });\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { configureStore } from './store';\nimport { Provider } from 'react-redux';\n\nconst { store } = configureStore();\n\nconst App_ = () => {\n  return (\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>\n  );\n};\n\nReactDOM.render(<App_ />, document.getElementById('root'));\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers';\n\nexport const configureStore = () => {\n  const composeEnhancers =\n    typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n      : compose;\n\n  const enhancer = composeEnhancers(applyMiddleware());\n  const store = createStore(rootReducer(), {}, enhancer);\n  return { store };\n};\n"],"sourceRoot":""}